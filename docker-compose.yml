version: '3.4'

services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  user:
    build:
      dockerfile: Dockerfile.user
      context: .
    ports:
      - "8080:8080"
    environment:
      DB_NAME: users
      DB_USER: user_svc
      DB_PASS: password
      DB_HOST: db
      DB_SSL_MODE: disable

  user-migrate:
    build:
      dockerfile: Dockerfile.migrate
      context: .
    environment:
      DB_NAME: users
      DB_USER: user_svc
      DB_PASS: password
      DB_HOST: db
      DB_SSL_MODE: disable
    volumes:
      - "./migrations/user:/migrations"

  attendance:
    build:
      dockerfile: Dockerfile.attendance
      context: .
    ports:
      - "8081:8080"
    environment:
      DB_NAME: attendances
      DB_USER: attendance_svc
      DB_PASS: password
      DB_HOST: db
      DB_SSL_MODE: disable

  attendance-migrate:
    image: golang:1.13
    environment:
      DB_NAME: attendances
      DB_USER: attendance_svc
      DB_PASS: password
      DB_HOST: db
      DB_SSL_MODE: disable
    volumes:
      - "./migrations/attendance:/migrations"
    command: |
      goose postgres "user=$$DB_USER dbname=$$DB_NAME password=$$DB_PASS host=$$DB_HOST sslmode=$$DB_SSL_MODE" up && \
      goose postgres "user=$$DB_USER dbname=$$DB_NAME password=$$DB_PASS host=$$DB_HOST sslmode=$$DB_SSL_MODE" status
